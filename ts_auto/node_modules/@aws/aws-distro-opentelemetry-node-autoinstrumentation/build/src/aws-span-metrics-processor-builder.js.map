{"version":3,"file":"aws-span-metrics-processor-builder.js","sourceRoot":"","sources":["../../src/aws-span-metrics-processor-builder.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;;;AAItC,qFAA+E;AAC/E,6EAAuE;AAIvE,4CAA4C;AAC5C,MAAM,KAAK,GAAW,OAAO,CAAC;AAC9B,MAAM,KAAK,GAAW,OAAO,CAAC;AAC9B,MAAM,OAAO,GAAW,SAAS,CAAC;AAClC,MAAM,aAAa,GAAW,cAAc,CAAC;AAE7C,oDAAoD;AACpD,MAAa,8BAA8B;IAsBzC,YAAoB,aAA4B,EAAE,QAAkB,EAAE,yBAA6C;QAZnH,4BAA4B;QACpB,cAAS,GAA6B,8BAA8B,CAAC,iBAAiB,CAAC;QACvF,cAAS,GAAW,8BAA8B,CAAC,kBAAkB,CAAC;QAW5E,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,kBAAkB,GAAG,yBAAyB,CAAC;IACtD,CAAC;IAZM,MAAM,CAAC,MAAM,CAClB,aAA4B,EAC5B,QAAkB,EAClB,yBAA6C;QAE7C,OAAO,IAAI,8BAA8B,CAAC,aAAa,EAAE,QAAQ,EAAE,yBAAyB,CAAC,CAAC;IAChG,CAAC;IAQD;;;OAGG;IACI,YAAY,CAAC,SAAmC;QACrD,IAAI,SAAS,IAAI,IAAI,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;SACzD;QACD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;OAGG;IACI,YAAY,CAAC,SAAiB;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,KAAK;QACV,MAAM,KAAK,GAAU,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACjE,MAAM,cAAc,GAAc,KAAK,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC/D,MAAM,cAAc,GAAc,KAAK,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAE/D,MAAM,aAAa,GAAkB;YACnC,IAAI,EAAE,aAAa;SACpB,CAAC;QACF,MAAM,gBAAgB,GAAc,KAAK,CAAC,eAAe,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;QAElF,OAAO,oDAAuB,CAAC,MAAM,CACnC,cAAc,EACd,cAAc,EACd,gBAAgB,EAChB,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,kBAAkB,CACxB,CAAC;IACJ,CAAC;;AAnEH,wEAoEC;AAnEC,WAAW;AACI,gDAAiB,GAA6B,IAAI,4DAA2B,EAAE,CAAC;AAChF,iDAAkB,GAAW,yBAAyB,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Histogram, Meter, MeterProvider, MetricOptions } from '@opentelemetry/api';\nimport { Resource } from '@opentelemetry/resources';\nimport { AwsMetricAttributeGenerator } from './aws-metric-attribute-generator';\nimport { AwsSpanMetricsProcessor } from './aws-span-metrics-processor';\nimport { MetricAttributeGenerator } from './metric-attribute-generator';\nimport { ForceFlushFunction } from './aws-span-processing-util';\n\n// Metric instrument configuration constants\nconst ERROR: string = 'Error';\nconst FAULT: string = 'Fault';\nconst LATENCY: string = 'Latency';\nconst LATENCY_UNITS: string = 'Milliseconds';\n\n/** A builder for {@link AwsSpanMetricsProcessor} */\nexport class AwsSpanMetricsProcessorBuilder {\n  // Defaults\n  private static DEFAULT_GENERATOR: MetricAttributeGenerator = new AwsMetricAttributeGenerator();\n  private static DEFAULT_SCOPE_NAME: string = 'AwsSpanMetricsProcessor';\n\n  // Required builder elements\n  private meterProvider: MeterProvider;\n  private resource: Resource;\n  private forceFlushFunction: ForceFlushFunction;\n\n  // Optional builder elements\n  private generator: MetricAttributeGenerator = AwsSpanMetricsProcessorBuilder.DEFAULT_GENERATOR;\n  private scopeName: string = AwsSpanMetricsProcessorBuilder.DEFAULT_SCOPE_NAME;\n\n  public static create(\n    meterProvider: MeterProvider,\n    resource: Resource,\n    meterProviderForceFlusher: ForceFlushFunction\n  ): AwsSpanMetricsProcessorBuilder {\n    return new AwsSpanMetricsProcessorBuilder(meterProvider, resource, meterProviderForceFlusher);\n  }\n\n  private constructor(meterProvider: MeterProvider, resource: Resource, meterProviderForceFlusher: ForceFlushFunction) {\n    this.meterProvider = meterProvider;\n    this.resource = resource;\n    this.forceFlushFunction = meterProviderForceFlusher;\n  }\n\n  /**\n   * Sets the generator used to generate attributes used in metrics produced by span metrics\n   * processor. If unset, defaults to {@link DEFAULT_GENERATOR}. Must not be null.\n   */\n  public setGenerator(generator: MetricAttributeGenerator): AwsSpanMetricsProcessorBuilder {\n    if (generator == null) {\n      throw new Error('generator must not be null/undefined');\n    }\n    this.generator = generator;\n    return this;\n  }\n\n  /**\n   * Sets the scope name used in the creation of metrics by the span metrics processor. If unset,\n   * defaults to {@link DEFAULT_SCOPE_NAME}. Must not be null.\n   */\n  public setScopeName(scopeName: string): AwsSpanMetricsProcessorBuilder {\n    this.scopeName = scopeName;\n    return this;\n  }\n\n  public build(): AwsSpanMetricsProcessor {\n    const meter: Meter = this.meterProvider.getMeter(this.scopeName);\n    const errorHistogram: Histogram = meter.createHistogram(ERROR);\n    const faultHistogram: Histogram = meter.createHistogram(FAULT);\n\n    const metricOptions: MetricOptions = {\n      unit: LATENCY_UNITS,\n    };\n    const latencyHistogram: Histogram = meter.createHistogram(LATENCY, metricOptions);\n\n    return AwsSpanMetricsProcessor.create(\n      errorHistogram,\n      faultHistogram,\n      latencyHistogram,\n      this.generator,\n      this.resource,\n      this.forceFlushFunction\n    );\n  }\n}\n"]}