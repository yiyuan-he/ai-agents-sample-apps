{"version":3,"file":"sampling-rule.js","sourceRoot":"","sources":["../../../src/sampler/sampling-rule.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;;;AAItC,MAAa,YAAY;IAevB,YAAY,YAA2B;QACrC,8FAA8F;QAC9F,gHAAgH;QAChH,qCAAqC;QACrC,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC;QAC1E,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC;QACtC,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC,aAAa,CAAC;QAChD,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC;QACxC,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;QAC5C,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;QAC5C,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC;QAC1C,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC;QACpC,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;QAC5C,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC;QACpC,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC;IAC5C,CAAC;IAEM,MAAM,CAAC,KAAoB;QAChC,IAAI,gBAAyB,CAAC;QAE9B,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,IAAI,KAAK,CAAC,UAAU,KAAK,SAAS,EAAE;YACnE,gBAAgB,GAAG,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC,UAAU,CAAC;SACzD;aAAM;YACL,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;YACtE,KAAK,MAAM,YAAY,IAAI,KAAK,CAAC,UAAU,EAAE;gBAC3C,IAAI,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE;oBAC1G,gBAAgB,GAAG,KAAK,CAAC;oBACzB,MAAM;iBACP;aACF;SACF;QAED,OAAO,CACL,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC,SAAS;YAClC,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC,UAAU;YACpC,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI;YACxB,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ;YAChC,IAAI,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa;YAC1C,IAAI,CAAC,WAAW,KAAK,KAAK,CAAC,WAAW;YACtC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO;YAC9B,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ;YAChC,IAAI,CAAC,WAAW,KAAK,KAAK,CAAC,WAAW;YACtC,IAAI,CAAC,WAAW,KAAK,KAAK,CAAC,WAAW;YACtC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO;YAC9B,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO;YAC9B,gBAAgB,CACjB,CAAC;IACJ,CAAC;CACF;AAjED,oCAiEC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { ISamplingRule } from './remote-sampler.types';\n\nexport class SamplingRule implements ISamplingRule {\n  public RuleName: string;\n  public RuleARN: string | undefined;\n  public Priority: number;\n  public ReservoirSize: number;\n  public FixedRate: number;\n  public ServiceName: string;\n  public ServiceType: string;\n  public Host: string;\n  public HTTPMethod: string;\n  public URLPath: string;\n  public ResourceARN: string;\n  public Attributes: { [key: string]: string } | undefined;\n  public Version: number;\n\n  constructor(samplingRule: ISamplingRule) {\n    // The AWS API docs mark `RuleName` as an optional field but in practice it seems to always be\n    // present, and sampling targets could not be computed without it. For now provide an arbitrary fallback just in\n    // case the AWS API docs are correct.\n    this.RuleName = samplingRule.RuleName ? samplingRule.RuleName : 'Default';\n    this.RuleARN = samplingRule.RuleARN;\n    this.Priority = samplingRule.Priority;\n    this.ReservoirSize = samplingRule.ReservoirSize;\n    this.FixedRate = samplingRule.FixedRate;\n    this.ServiceName = samplingRule.ServiceName;\n    this.ServiceType = samplingRule.ServiceType;\n    this.Host = samplingRule.Host;\n    this.HTTPMethod = samplingRule.HTTPMethod;\n    this.URLPath = samplingRule.URLPath;\n    this.ResourceARN = samplingRule.ResourceARN;\n    this.Version = samplingRule.Version;\n    this.Attributes = samplingRule.Attributes;\n  }\n\n  public equals(other: ISamplingRule): boolean {\n    let attributesEquals: boolean;\n\n    if (this.Attributes === undefined || other.Attributes === undefined) {\n      attributesEquals = this.Attributes === other.Attributes;\n    } else {\n      attributesEquals = this.Attributes.length === other.Attributes.length;\n      for (const attributeKey in other.Attributes) {\n        if (!(attributeKey in this.Attributes) || this.Attributes[attributeKey] !== other.Attributes[attributeKey]) {\n          attributesEquals = false;\n          break;\n        }\n      }\n    }\n\n    return (\n      this.FixedRate === other.FixedRate &&\n      this.HTTPMethod === other.HTTPMethod &&\n      this.Host === other.Host &&\n      this.Priority === other.Priority &&\n      this.ReservoirSize === other.ReservoirSize &&\n      this.ResourceARN === other.ResourceARN &&\n      this.RuleARN === other.RuleARN &&\n      this.RuleName === other.RuleName &&\n      this.ServiceName === other.ServiceName &&\n      this.ServiceType === other.ServiceType &&\n      this.URLPath === other.URLPath &&\n      this.Version === other.Version &&\n      attributesEquals\n    );\n  }\n}\n"]}